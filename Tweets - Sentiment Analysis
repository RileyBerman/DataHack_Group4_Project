#Contributor: Min Kim

#Description: Created a table containing politicians' usernames, tweets, date of the tweets
#             and the sentiment (score and direction) of the tweets. Them merged the table with the CA State
#             and CA Assembly data frames to see each politicians' average sentiment score

#Methodolgy: The sentiment is calculated using the analyzeSentiment function from the SentimentAnalysis package.
#             The sentiment score is then converted to a direction (positive, negative, neutral) using the convertToDirection function.


rm(list = ls())

#Install and load the necessary packages
#install.packages("SentimentAnalysis")
#install.packages("SnowballC")
#install.packages("tidyverse")
library(SentimentAnalysis)
library(SnowballC)
library(tidyverse)
library(readr)

# Load the data
california_politicians_tweets_FIXED <- read_csv("C:/Users/mkim1/Downloads/california_politicians_tweets_FIXED.csv")
View(california_politicians_tweets_FIXED)

# isolate the content column
content <- california_politicians_tweets_FIXED$content

# sentiment analysis using analyzeSentiment function
sentiment <- analyzeSentiment(content)
sentiment$SentimentQDAP
# Convert the sentiment scores to a direction (positive, negative, neutral) & turn it into a tibble
sentiment_direction <- tibble(convertToDirection(sentiment$SentimentQDAP))

# Create a data frame with the tweets and their sentiment
tweets_df <- data.frame(content = content, sentiment = sentiment$SentimentQDAP, sentiment_direction = sentiment_direction)

# Create a new column in the original data frame with the sentiment direction
tweets <- unique(left_join(california_politicians_tweets_FIXED, tweets_df, by = "content")) 

#Rename the last column to Sentiment Direction
colnames(tweets)[ncol(tweets)] <- "sentiment_direction"

#write.csv(tweets, file = "Tweets_Sentiment_Analysis.csv")


# Create a summary table with the average sentiment score and direction for each politician
tweets_summary <- tapply(tweets$sentiment, tweets$username, mean)
view(tweets_summary)
  
tweets_table <- as.data.frame(tweets_summary)

# Create a new table by extracting the mean score of sentiment direction from tweets_final 
# if u noticed, the username "column" isn't really a column, so I have to make a new column with same values
tweets_data <- tweets_table %>%
  mutate(username = rownames(tweets_table))

# Rename the columns before merging tables
tweets_final <- tweets_data %>% rename(sentiment_avg = tweets_summary, twitter = username)



# MERGED TABLE WITH SENATE
CA_State_Final_Updated <- read_csv("DataHack_Group4_Project/CA_State/CA_State_Combined/CA_State_Final_Updated.csv")
View(CA_State_Final_Updated)

# Get rid of the @ in the CA_state_Final_Updated data frame
CA_State_Final_Updated$twitter <- gsub("@", "", CA_State_Final_Updated$twitter)

# Merge the tweets summary with the CA_State_Final_Updated data frame
Merged_Senate <- left_join(CA_State_Final_Updated, tweets_final, by = "twitter")

# Write the merged data frame to a CSV file
write.csv(Merged_Senate, file = "Senate_avg_sentiment.csv")

  
  
# MERGED DATA WITH ASSEMBLY
CA_Assembly_Final_Updated <- read_csv("DataHack_Group4_Project/CA_Assembly/CA_Assembly_Combined/CA_Assembly_Final_Manual.csv")
View(CA_Assembly_Final_Updated)

# Get rid of the @ in the CA_state_Final_Updated data frame
CA_Assembly_Final_Updated$twitter <- gsub("@", "", CA_Assembly_Final_Updated$twitter)

# Merge the tweets summary with the CA_Assembly_Final_Updated data frame
Merged_Assembly <- left_join(CA_Assembly_Final_Updated, tweets_final, by = "twitter")

# Write the merged data frame to a CSV file
write.csv(Merged_Assembly, file = "Assembly_avg_sentiment.csv")



